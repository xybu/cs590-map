Parameter file `User_Params' not found; using default parameters.
usage: {
  0:  0,  1:  0,  2:  0,  3:  0,  4:  0,  5:  0,  6:  0,  7:  0, 
  8:  0,  9:  0, 10:  0, 11:  0, 12:  0, 13:  0, 14:  0, 15:  0, 
 16:  0, 17:  0, 18:  0, 19:  0
}

host_usage: {
  0:  0,  1:  0,  2:  0,  3:  0,  4:  0,  5:  0,  6:  0,  7:  0, 
  8:  0,  9:  0, 10:  0, 11:  0, 12:  0, 13:  0, 14:  0, 15:  0, 
 16:  0, 17:  0, 18:  0, 19:  0
}

Graph input file: Host input file: Global partitioning method:
  (1) Multilevel-KL
  (2) Spectral
  (3) Inertial
  (4) Linear
  (5) Random
  (6) Scattered
  (7) Read-from-file
Global partitioning method:
  (1) Multilevel-KL
  (2) Spectral
  (3) Inertial
  (4) Linear
  (5) Random
  (6) Scattered
  (7) Read-from-file
Number of vertices to coarsen down to: Total number of target hypercube dimensions: Enter Capacity function for PM1: 
Capacity function for PM1: 0.000000 u^2 + 392.066800 u + -383.859711
Enter Capacity function for PM2: 
Capacity function for PM2: 0.000000 u^2 + 733.963700 u + -5547.230469
Enter Capacity function for PM3: 
Capacity function for PM3: 5.749800 u^2 + 449.099000 u + 4061.292725
Enter Capacity function for PM4: 
Capacity function for PM4: 4.459100 u^2 + 1267.184800 u + 948.392517
Partitioning dimension: 
  (1) Bisection
  (2) Quadrisection
host_percent (fscanf): {
  0:  1,  1:  1,  2:  1,  3:  1,  4:  1,  5:  3,  6:  1,  7:  1, 
  8:  3,  9:  3, 10:  5, 11:  3, 12:  5, 13:  1, 14:  1, 15:  1, 
 16:  1, 17:  1, 18:  1, 19:  3, 20:  1, 21:  1, 22:  1, 23:  1, 
 24:  1, 25:  1, 26:  3, 27:  5, 28:  1, 29:  3, 30:  1, 31:  1, 
 32:  1, 33:  1, 34:  1, 35:  1, 36:  1, 37:  1, 38:  1, 39:  1, 
 40:  1, 41:  1, 42:  7, 43:  1, 44:  1, 45:  1, 46:  1, 47:  3, 
 48:  1, 49:  1, 50:  1, 51:  1, 52:  1, 53:  3, 54:  3, 55:  1, 
 56:  1, 57:  1, 58:  7, 59:  1, 60:  1, 61:  1, 62:  1, 63:  1, 
 64:  1, 65:  1, 66:  1, 67:  1, 68:  1, 69:  1, 70:  1, 71:  1, 
 72:  1, 73:  1, 74:  1, 75:  1, 76:  1, 77:  1, 78:  1, 79:  1, 
 80:  1, 81:  1, 82:  1, 83:  1, 84:  1, 85:  1, 86:  1, 87:  1, 
 88:  1, 89:  1, 90:  1, 91:  1, 92:  5, 93:  1, 94:  1, 95:  1, 
 96:  1, 97:  1, 98:  3, 99:  1, 100:  1, 101:  1, 102:  1, 103:  1, 
 104:  1, 105:  1, 106:  1, 107:  1, 108:  1, 109:  1, 110:  1, 111:  1, 
 112:  1, 113:  1, 114:  1, 115:  1, 116:  1, 117:  1, 118:  1, 119:  1, 
 120:  1, 121:  1, 122:  1, 123:  1, 124:  1, 125:  1, 126:  1, 127:  1, 
 128:  1, 129:  1, 130:  1, 131:  1, 132:  1, 133:  1, 134:  1, 135:  3, 
 136:  1, 137:  1, 138:  3, 139:  1, 140:  1, 141:  1, 142:  1, 143:  1, 
 144:  1, 145:  1, 146:  1, 147:  1, 148:  1, 149:  3, 150:  1, 151:  1, 
 152:  3, 153:  1, 154:  1, 155:  1, 156:  1, 157:  1, 158:  1, 159:  1, 
 160:  1, 161:  1, 162:  1, 163:  1, 164:  1, 165:  1, 166:  1, 167:  1, 
 168:  1, 169:  3, 170:  1, 171:  1, 172:  1, 173:  1, 174:  1, 175:  1, 
 176:  1, 177:  1, 178:  1, 179:  1, 180:  1, 181:  1, 182:  1, 183:  1, 
 184:  1, 185:  1, 186:  1, 187:  1, 188:  1, 189:  1, 190:  1, 191:  1, 
 192:  1, 193:  1, 194:  1, 195:  5, 196:  1, 197:  1, 198:  1, 199:  1, 
 200:  3, 201:  1, 202:  1, 203:  3, 204:  1, 205:  1, 206:  5, 207:  1, 
 208:  1, 209:  1, 210:  1, 211:  1, 212:  1, 213:  1, 214:  1, 215:  1, 
 216:  1, 217:  1, 218:  1, 219:  1, 220:  1, 221:  1, 222:  1, 223:  1, 
 224:  1, 225:  1, 226:  1, 227:  1, 228:  1, 229:  1, 230:  1, 231:  1, 
 232:  1, 233:  1, 234:  1, 235:  1, 236:  1, 237:  1, 238:  1, 239:  1, 
 240:  5, 241:  1, 242:  1, 243:  1, 244:  1, 245:  1, 246:  1, 247:  1, 
 248:  1, 249:  1, 250:  1, 251:  1, 252:  1, 253:  1, 254:  1, 255:  1, 
 256:  1, 257:  3, 258:  1, 259:  1, 260:  1, 261:  1, 262:  1, 263:  1, 
 264:  7, 265:  1, 266:  1, 267:  1, 268:  7, 269:  1, 270:  1, 271:  1, 
 272:  1, 273:  1, 274:  1, 275:  1, 276:  1, 277:  1, 278:  1, 279:  1, 
 280:  1, 281:  1, 282:  1, 283:  1, 284:  1, 285:  1, 286:  1, 287:  1, 
 288:  1, 289:  1, 290:  1, 291:  1, 292:  1, 293:  1, 294:  1, 295:  1, 
 296:  1, 297:  1, 298:  1, 299:  1, 300:  1, 301:  1, 302:  1, 303:  1, 
 304:  1, 305:  1, 306:  1, 307:  3, 308:  1, 309:  1, 310:  1, 311:  1, 
 312:  1, 313:  1, 314:  1, 315:  1, 316:  1, 317:  1
}

assignment (input_assign): {
  0:  0,  1:  0,  2:  0,  3:  0,  4:  0,  5:  0,  6:  0,  7:  0, 
  8:  0,  9:  0, 10:  0, 11:  0, 12:  0, 13:  0, 14:  0, 15:  0, 
 16:  0, 17:  0, 18:  0, 19:  0, 20:  0, 21:  0, 22:  0, 23:  0, 
 24:  0, 25:  0, 26:  0, 27:  0, 28:  0, 29:  0, 30:  0, 31:  0, 
 32:  0, 33:  0, 34:  0, 35:  0, 36:  0, 37:  0, 38:  0, 39:  0, 
 40:  0, 41:  0, 42:  0, 43:  0, 44:  0, 45:  0, 46:  0, 47:  0, 
 48:  0, 49:  0, 50:  0, 51:  0, 52:  0, 53:  0, 54:  0, 55:  0, 
 56:  0, 57:  0, 58:  0, 59:  0, 60:  0, 61:  0, 62:  0, 63:  0, 
 64:  0, 65:  0, 66:  0, 67:  0, 68:  0, 69:  0, 70:  0, 71:  0, 
 72:  0, 73:  0, 74:  0, 75:  0, 76:  0, 77:  0, 78:  0, 79:  0, 
 80:  0, 81:  0, 82:  0, 83:  0, 84:  0, 85:  0, 86:  0, 87:  0, 
 88:  0, 89:  0, 90:  0, 91:  0, 92:  0, 93:  0, 94:  0, 95:  0, 
 96:  0, 97:  0, 98:  0, 99:  0, 100:  0, 101:  0, 102:  0, 103:  0, 
 104:  0, 105:  0, 106:  0, 107:  0, 108:  0, 109:  0, 110:  0, 111:  0, 
 112:  0, 113:  0, 114:  0, 115:  0, 116:  0, 117:  0, 118:  0, 119:  0, 
 120:  0, 121:  0, 122:  0, 123:  0, 124:  0, 125:  0, 126:  0, 127:  0, 
 128:  0, 129:  0, 130:  0, 131:  0, 132:  0, 133:  0, 134:  0, 135:  0, 
 136:  0, 137:  0, 138:  0, 139:  0, 140:  0, 141:  0, 142:  0, 143:  0, 
 144:  0, 145:  0, 146:  0, 147:  0, 148:  0, 149:  0, 150:  0, 151:  0, 
 152:  0, 153:  0, 154:  0, 155:  0, 156:  0, 157:  0, 158:  0, 159:  0, 
 160:  0, 161:  0, 162:  0, 163:  0, 164:  0, 165:  0, 166:  0, 167:  0, 
 168:  0, 169:  0, 170:  0, 171:  0, 172:  0, 173:  0, 174:  0, 175:  0, 
 176:  0, 177:  0, 178:  0, 179:  0, 180:  0, 181:  0, 182:  0, 183:  0, 
 184:  0, 185:  0, 186:  0, 187:  0, 188:  0, 189:  0, 190:  0, 191:  0, 
 192:  0, 193:  0, 194:  0, 195:  0, 196:  0, 197:  0, 198:  0, 199:  0, 
 200:  0, 201:  0, 202:  0, 203:  0, 204:  0, 205:  0, 206:  0, 207:  0, 
 208:  0, 209:  0, 210:  0, 211:  0, 212:  0, 213:  0, 214:  0, 215:  0, 
 216:  0, 217:  0, 218:  0, 219:  0, 220:  0, 221:  0, 222:  0, 223:  0, 
 224:  0, 225:  0, 226:  0, 227:  0, 228:  0, 229:  0, 230:  0, 231:  0, 
 232:  0, 233:  0, 234:  0, 235:  0, 236:  0, 237:  0, 238:  0, 239:  0, 
 240:  0, 241:  0, 242:  0, 243:  0, 244:  0, 245:  0, 246:  0, 247:  0, 
 248:  0, 249:  0, 250:  0, 251:  0, 252:  0, 253:  0, 254:  0, 255:  0, 
 256:  0, 257:  0, 258:  0, 259:  0, 260:  0, 261:  0, 262:  0, 263:  0, 
 264:  0, 265:  0, 266:  0, 267:  0, 268:  0, 269:  0, 270:  0, 271:  0, 
 272:  0, 273:  0, 274:  0, 275:  0, 276:  0, 277:  0, 278:  0, 279:  0, 
 280:  0, 281:  0, 282:  0, 283:  0, 284:  0, 285:  0, 286:  0, 287:  0, 
 288:  0, 289:  0, 290:  0, 291:  0, 292:  0, 293:  0, 294:  0, 295:  0, 
 296:  0, 297:  0, 298:  0, 299:  0, 300:  0, 301:  0, 302:  0, 303:  0, 
 304:  0, 305:  0, 306:  0, 307:  0, 308:  0, 309:  0, 310:  0, 311:  0, 
 312:  0, 313:  0, 314:  0, 315:  0, 316:  0, 317:  0
}

# of PMs: 4
usage (averaged): {
  0: 20,  1: 20,  2: 20,  3: 20
}

set_capa (switch capacity): {
  0: 7457,  1: 9132,  2: 15343,  3: 28075
}

Siyuan: vwgt_sum: 23080.000000, nsets_tot: 4
Siyuan: Total capacity: 60007.000000
 Set goals:
	goal[0]: 0.000000
	goal[1]: 0.000000
	goal[2]: 0.000000
	goal[3]: 23080.000000

Graph file: `1221.r0.cch.abr.graph', # vertices = 318, # edges = 758
Global method: Multilevel-KL
Number of vertices to coarsen down to: 192
Eigen tolerance: 0.001
Local method: Kernighan-Lin
Partitioning target: 2-dimensional hypercube
Partitioning mode: Quadrisection
Random seed: 7654321
Active Parameters:
  CHECK_INPUT = True
  LANCZOS_TYPE:  Selective orthogonalization
  EIGEN_TOLERANCE = 0.001
  SRESTOL = -1 ... autoset to square of eigen tolerance
  LANCZOS_MAXITNS = -1 ... autoset to twice # vertices
  LANCZOS_SO_PRECISION = 2 ... double precision
  LANCZOS_SO_INTERVAL = 10
  LANCZOS_CONVERGENCE_MODE = 0 ... residual tolerance
  BISECTION_SAFETY = 10
  LANCZOS_TIME = 0 ... no detailed timing
  WARNING_EVECS = 2
  MAPPING_TYPE = 1 ... min-cost assignment
  MAKE_CONNECTED = True
  PERTURB = True
    NPERTURB = 2
    PERTURB_MAX = 0.003
  COARSEN_RATIO_MIN = 0.7
  COARSE_NLEVEL_KL = 2
  MATCH_TYPE = 1
  HEAVY_MATCH = False
  COARSE_KL_BOTTOM = True
  COARSEN_VWGTS = True
  COARSEN_EWGTS = True
  KL_ONLY_BNDY = True
  KL_RANDOM = True
  KL_METRIC = Hops
  KL_NTRIES_BAD = 1
  KL_BAD_MOVES = 20
  KL_UNDO_LIST = True
  KL_IMBALANCE = 0
  TERM_PROP = False
  OUTPUT_METRICS = 2
  MAKE_VWGTS = False
  REFINE_MAP = False
  REFINE_PARTITION = 0
  INTERNAL_VERTICES = False
  DEBUG_PARAMS = 2

WARNING: Coarsening not making enough progress, nvtxs = 318, cnvtxs = 240.
         Recursive coarsening being stopped prematurely.

After level 1  (nsets = 4):

                            Total      Max/Set      Min/Set
                            -----      -------      -------
Set Size:                   23080        22500            0
Edge Cuts:                    100          100            0
Hypercube Hops:               160          160            0
Boundary Vertices:              6            3            0
Boundary Vertex Hops:          10            6            0
Adjacent Sets:                  4            2            0
Internal Vertices:          22310        22050            0

Size of all sets:
0 300 280 22500 

~~~~~~~~~~~~~~partitioning finished~~~~~~~~~~~~~~~~~~
host_percent (after partition): {
  0:  1,  1:  1,  2:  1,  3:  1,  4:  1,  5:  3,  6:  1,  7:  1, 
  8:  3,  9:  3, 10:  5, 11:  3, 12:  5, 13:  1, 14:  1, 15:  1, 
 16:  1, 17:  1, 18:  1, 19:  3, 20:  1, 21:  1, 22:  1, 23:  1, 
 24:  1, 25:  1, 26:  3, 27:  5, 28:  1, 29:  3, 30:  1, 31:  1, 
 32:  1, 33:  1, 34:  1, 35:  1, 36:  1, 37:  1, 38:  1, 39:  1, 
 40:  1, 41:  1, 42:  7, 43:  1, 44:  1, 45:  1, 46:  1, 47:  3, 
 48:  1, 49:  1, 50:  1, 51:  1, 52:  1, 53:  3, 54:  3, 55:  1, 
 56:  1, 57:  1, 58:  7, 59:  1, 60:  1, 61:  1, 62:  1, 63:  1, 
 64:  1, 65:  1, 66:  1, 67:  1, 68:  1, 69:  1, 70:  1, 71:  1, 
 72:  1, 73:  1, 74:  1, 75:  1, 76:  1, 77:  1, 78:  1, 79:  1, 
 80:  1, 81:  1, 82:  1, 83:  1, 84:  1, 85:  1, 86:  1, 87:  1, 
 88:  1, 89:  1, 90:  1, 91:  1, 92:  5, 93:  1, 94:  1, 95:  1, 
 96:  1, 97:  1, 98:  3, 99:  1, 100:  1, 101:  1, 102:  1, 103:  1, 
 104:  1, 105:  1, 106:  1, 107:  1, 108:  1, 109:  1, 110:  1, 111:  1, 
 112:  1, 113:  1, 114:  1, 115:  1, 116:  1, 117:  1, 118:  1, 119:  1, 
 120:  1, 121:  1, 122:  1, 123:  1, 124:  1, 125:  1, 126:  1, 127:  1, 
 128:  1, 129:  1, 130:  1, 131:  1, 132:  1, 133:  1, 134:  1, 135:  3, 
 136:  1, 137:  1, 138:  3, 139:  1, 140:  1, 141:  1, 142:  1, 143:  1, 
 144:  1, 145:  1, 146:  1, 147:  1, 148:  1, 149:  3, 150:  1, 151:  1, 
 152:  3, 153:  1, 154:  1, 155:  1, 156:  1, 157:  1, 158:  1, 159:  1, 
 160:  1, 161:  1, 162:  1, 163:  1, 164:  1, 165:  1, 166:  1, 167:  1, 
 168:  1, 169:  3, 170:  1, 171:  1, 172:  1, 173:  1, 174:  1, 175:  1, 
 176:  1, 177:  1, 178:  1, 179:  1, 180:  1, 181:  1, 182:  1, 183:  1, 
 184:  1, 185:  1, 186:  1, 187:  1, 188:  1, 189:  1, 190:  1, 191:  1, 
 192:  1, 193:  1, 194:  1, 195:  5, 196:  1, 197:  1, 198:  1, 199:  1, 
 200:  3, 201:  1, 202:  1, 203:  3, 204:  1, 205:  1, 206:  5, 207:  1, 
 208:  1, 209:  1, 210:  1, 211:  1, 212:  1, 213:  1, 214:  1, 215:  1, 
 216:  1, 217:  1, 218:  1, 219:  1, 220:  1, 221:  1, 222:  1, 223:  1, 
 224:  1, 225:  1, 226:  1, 227:  1, 228:  1, 229:  1, 230:  1, 231:  1, 
 232:  1, 233:  1, 234:  1, 235:  1, 236:  1, 237:  1, 238:  1, 239:  1, 
 240:  5, 241:  1, 242:  1, 243:  1, 244:  1, 245:  1, 246:  1, 247:  1, 
 248:  1, 249:  1, 250:  1, 251:  1, 252:  1, 253:  1, 254:  1, 255:  1, 
 256:  1, 257:  3, 258:  1, 259:  1, 260:  1, 261:  1, 262:  1, 263:  1, 
 264:  7, 265:  1, 266:  1, 267:  1, 268:  7, 269:  1, 270:  1, 271:  1, 
 272:  1, 273:  1, 274:  1, 275:  1, 276:  1, 277:  1, 278:  1, 279:  1, 
 280:  1, 281:  1, 282:  1, 283:  1, 284:  1, 285:  1, 286:  1, 287:  1, 
 288:  1, 289:  1, 290:  1, 291:  1, 292:  1, 293:  1, 294:  1, 295:  1, 
 296:  1, 297:  1, 298:  1, 299:  1, 300:  1, 301:  1, 302:  1, 303:  1, 
 304:  1, 305:  1, 306:  1, 307:  3, 308:  1, 309:  1, 310:  1, 311:  1, 
 312:  1, 313:  1, 314:  1, 315:  1, 316:  1, 317:  1
}

assignment (after partition): {
  0:  3,  1:  3,  2:  3,  3:  3,  4:  3,  5:  3,  6:  3,  7:  3, 
  8:  3,  9:  3, 10:  3, 11:  3, 12:  3, 13:  3, 14:  3, 15:  3, 
 16:  3, 17:  3, 18:  3, 19:  3, 20:  3, 21:  3, 22:  3, 23:  3, 
 24:  3, 25:  3, 26:  3, 27:  3, 28:  3, 29:  3, 30:  3, 31:  3, 
 32:  3, 33:  3, 34:  3, 35:  3, 36:  3, 37:  3, 38:  3, 39:  3, 
 40:  3, 41:  3, 42:  3, 43:  3, 44:  3, 45:  3, 46:  3, 47:  3, 
 48:  3, 49:  3, 50:  3, 51:  3, 52:  3, 53:  3, 54:  3, 55:  3, 
 56:  3, 57:  3, 58:  3, 59:  3, 60:  3, 61:  3, 62:  3, 63:  3, 
 64:  3, 65:  3, 66:  3, 67:  3, 68:  3, 69:  3, 70:  3, 71:  3, 
 72:  3, 73:  3, 74:  3, 75:  3, 76:  3, 77:  3, 78:  3, 79:  3, 
 80:  3, 81:  3, 82:  3, 83:  3, 84:  3, 85:  3, 86:  3, 87:  3, 
 88:  3, 89:  3, 90:  3, 91:  3, 92:  3, 93:  3, 94:  2, 95:  3, 
 96:  3, 97:  3, 98:  3, 99:  3, 100:  1, 101:  1, 102:  1, 103:  3, 
 104:  3, 105:  3, 106:  3, 107:  3, 108:  3, 109:  3, 110:  3, 111:  3, 
 112:  3, 113:  3, 114:  3, 115:  3, 116:  3, 117:  3, 118:  3, 119:  3, 
 120:  3, 121:  3, 122:  3, 123:  3, 124:  3, 125:  3, 126:  3, 127:  3, 
 128:  3, 129:  3, 130:  3, 131:  3, 132:  3, 133:  3, 134:  3, 135:  3, 
 136:  3, 137:  3, 138:  3, 139:  3, 140:  3, 141:  1, 142:  3, 143:  3, 
 144:  3, 145:  3, 146:  1, 147:  1, 148:  3, 149:  3, 150:  3, 151:  3, 
 152:  3, 153:  3, 154:  3, 155:  3, 156:  3, 157:  3, 158:  3, 159:  3, 
 160:  3, 161:  3, 162:  3, 163:  3, 164:  3, 165:  3, 166:  3, 167:  3, 
 168:  3, 169:  3, 170:  3, 171:  3, 172:  3, 173:  3, 174:  3, 175:  3, 
 176:  3, 177:  3, 178:  3, 179:  3, 180:  3, 181:  3, 182:  3, 183:  3, 
 184:  3, 185:  3, 186:  3, 187:  3, 188:  3, 189:  3, 190:  3, 191:  3, 
 192:  3, 193:  3, 194:  3, 195:  3, 196:  3, 197:  3, 198:  3, 199:  3, 
 200:  3, 201:  3, 202:  3, 203:  3, 204:  3, 205:  2, 206:  3, 207:  3, 
 208:  3, 209:  3, 210:  3, 211:  3, 212:  3, 213:  3, 214:  2, 215:  1, 
 216:  2, 217:  2, 218:  1, 219:  1, 220:  3, 221:  3, 222:  3, 223:  3, 
 224:  3, 225:  3, 226:  3, 227:  3, 228:  3, 229:  3, 230:  3, 231:  3, 
 232:  3, 233:  3, 234:  3, 235:  3, 236:  3, 237:  3, 238:  3, 239:  3, 
 240:  3, 241:  3, 242:  3, 243:  3, 244:  3, 245:  3, 246:  3, 247:  3, 
 248:  3, 249:  3, 250:  3, 251:  3, 252:  3, 253:  3, 254:  3, 255:  3, 
 256:  3, 257:  3, 258:  3, 259:  3, 260:  3, 261:  3, 262:  3, 263:  3, 
 264:  3, 265:  3, 266:  3, 267:  3, 268:  3, 269:  3, 270:  3, 271:  3, 
 272:  3, 273:  3, 274:  3, 275:  3, 276:  3, 277:  3, 278:  3, 279:  3, 
 280:  3, 281:  3, 282:  3, 283:  3, 284:  3, 285:  3, 286:  3, 287:  3, 
 288:  3, 289:  3, 290:  3, 291:  3, 292:  3, 293:  3, 294:  3, 295:  2, 
 296:  3, 297:  3, 298:  2, 299:  3, 300:  3, 301:  3, 302:  3, 303:  3, 
 304:  3, 305:  3, 306:  3, 307:  3, 308:  3, 309:  3, 310:  3, 311:  3, 
 312:  3, 313:  3, 314:  3, 315:  3, 316:  3, 317:  3
}

is_pm_disabled (after partitioning): {
  0:  1,  1:  1,  2:  1,  3:  0
}

Warning: host 94 is assigned to disabled PM #2. Move it to 3.
Warning: host 100 is assigned to disabled PM #1. Move it to 3.
Warning: host 101 is assigned to disabled PM #1. Move it to 3.
Warning: host 102 is assigned to disabled PM #1. Move it to 3.
Warning: host 141 is assigned to disabled PM #1. Move it to 3.
Warning: host 146 is assigned to disabled PM #1. Move it to 3.
Warning: host 147 is assigned to disabled PM #1. Move it to 3.
Warning: host 205 is assigned to disabled PM #2. Move it to 3.
Warning: host 214 is assigned to disabled PM #2. Move it to 3.
Warning: host 215 is assigned to disabled PM #1. Move it to 3.
Warning: host 216 is assigned to disabled PM #2. Move it to 3.
Warning: host 217 is assigned to disabled PM #2. Move it to 3.
Warning: host 218 is assigned to disabled PM #1. Move it to 3.
Warning: host 219 is assigned to disabled PM #1. Move it to 3.
Warning: host 295 is assigned to disabled PM #2. Move it to 3.
Warning: host 298 is assigned to disabled PM #2. Move it to 3.
host_usage (updated): {
  0:  0,  1:  0,  2:  0,  3: 410,  4:  0,  5:  0,  6:  0,  7:  0, 
  8:  0,  9:  0, 10:  0, 11:  0, 12:  0, 13:  0, 14:  0, 15:  0, 
 16:  0, 17:  0, 18:  0, 19:  0
}

PM 0 is under-utilized. Its CPU usage is 0 + 20 = 20.
  |- Accum. usage=20.00, New usage=100.00, Next usage=68.

PM 1 is under-utilized. Its CPU usage is 0 + 20 = 20.
  |- Accum. usage=20.00, New usage=100.00, Next usage=68.

PM 2 is under-utilized. Its CPU usage is 0 + 20 = 20.
  |- Accum. usage=20.00, New usage=100.00, Next usage=68.

PM 3 is over-utilized. Its CPU usage is 410 + 20 = 430.
  |- Accum. usage=20.00, New usage=10.00, Next usage=14.

usage (updated): {
  0: 68,  1: 68,  2: 68,  3: 14
}

set_capa (switch capacity): {
  0: 26276,  1: 44362,  2: 61187,  3: 19562
}

Siyuan: vwgt_sum: 23080.000000, nsets_tot: 4
Siyuan: Total capacity: 151387.000000
 Set goals:
	goal[0]: 0.000000
	goal[1]: 0.000000
	goal[2]: 23080.000000
	goal[3]: 0.000000

Graph file: `1221.r0.cch.abr.graph', # vertices = 318, # edges = 758
Global method: Multilevel-KL
Number of vertices to coarsen down to: 192
Eigen tolerance: 0.001
Local method: Kernighan-Lin
Partitioning target: 2-dimensional hypercube
Partitioning mode: Quadrisection
Random seed: 7654321
Active Parameters:
  CHECK_INPUT = True
  LANCZOS_TYPE:  Selective orthogonalization
  EIGEN_TOLERANCE = 0.001
  SRESTOL = -1 ... autoset to square of eigen tolerance
  LANCZOS_MAXITNS = -1 ... autoset to twice # vertices
  LANCZOS_SO_PRECISION = 2 ... double precision
  LANCZOS_SO_INTERVAL = 10
  LANCZOS_CONVERGENCE_MODE = 0 ... residual tolerance
  BISECTION_SAFETY = 10
  LANCZOS_TIME = 0 ... no detailed timing
  WARNING_EVECS = 2
  MAPPING_TYPE = 1 ... min-cost assignment
  MAKE_CONNECTED = True
  PERTURB = True
    NPERTURB = 2
    PERTURB_MAX = 0.003
  COARSEN_RATIO_MIN = 0.7
  COARSE_NLEVEL_KL = 2
  MATCH_TYPE = 1
  HEAVY_MATCH = False
  COARSE_KL_BOTTOM = True
  COARSEN_VWGTS = True
  COARSEN_EWGTS = True
  KL_ONLY_BNDY = True
  KL_RANDOM = True
  KL_METRIC = Hops
  KL_NTRIES_BAD = 1
  KL_BAD_MOVES = 20
  KL_UNDO_LIST = True
  KL_IMBALANCE = 0
  TERM_PROP = False
  OUTPUT_METRICS = 2
  MAKE_VWGTS = False
  REFINE_MAP = False
  REFINE_PARTITION = 0
  INTERNAL_VERTICES = False
  DEBUG_PARAMS = 2

WARNING: Coarsening not making enough progress, nvtxs = 318, cnvtxs = 240.
         Recursive coarsening being stopped prematurely.

After level 1  (nsets = 4):

                            Total      Max/Set      Min/Set
                            -----      -------      -------
Set Size:                   23080        23080            0
Edge Cuts:                      0            0            0
Hypercube Hops:                 0            0            0
Boundary Vertices:              0            0            0
Boundary Vertex Hops:           0            0            0
Adjacent Sets:                  0            0            0
Internal Vertices:          23080        23080            0

Size of all sets:
0 0 23080 0 


Total time: 0.004 sec.
~~~~~~~~~~~~~~partitioning finished~~~~~~~~~~~~~~~~~~
host_percent (after partition): {
  0:  1,  1:  1,  2:  1,  3:  1,  4:  1,  5:  3,  6:  1,  7:  1, 
  8:  3,  9:  3, 10:  5, 11:  3, 12:  5, 13:  1, 14:  1, 15:  1, 
 16:  1, 17:  1, 18:  1, 19:  3, 20:  1, 21:  1, 22:  1, 23:  1, 
 24:  1, 25:  1, 26:  3, 27:  5, 28:  1, 29:  3, 30:  1, 31:  1, 
 32:  1, 33:  1, 34:  1, 35:  1, 36:  1, 37:  1, 38:  1, 39:  1, 
 40:  1, 41:  1, 42:  7, 43:  1, 44:  1, 45:  1, 46:  1, 47:  3, 
 48:  1, 49:  1, 50:  1, 51:  1, 52:  1, 53:  3, 54:  3, 55:  1, 
 56:  1, 57:  1, 58:  7, 59:  1, 60:  1, 61:  1, 62:  1, 63:  1, 
 64:  1, 65:  1, 66:  1, 67:  1, 68:  1, 69:  1, 70:  1, 71:  1, 
 72:  1, 73:  1, 74:  1, 75:  1, 76:  1, 77:  1, 78:  1, 79:  1, 
 80:  1, 81:  1, 82:  1, 83:  1, 84:  1, 85:  1, 86:  1, 87:  1, 
 88:  1, 89:  1, 90:  1, 91:  1, 92:  5, 93:  1, 94:  1, 95:  1, 
 96:  1, 97:  1, 98:  3, 99:  1, 100:  1, 101:  1, 102:  1, 103:  1, 
 104:  1, 105:  1, 106:  1, 107:  1, 108:  1, 109:  1, 110:  1, 111:  1, 
 112:  1, 113:  1, 114:  1, 115:  1, 116:  1, 117:  1, 118:  1, 119:  1, 
 120:  1, 121:  1, 122:  1, 123:  1, 124:  1, 125:  1, 126:  1, 127:  1, 
 128:  1, 129:  1, 130:  1, 131:  1, 132:  1, 133:  1, 134:  1, 135:  3, 
 136:  1, 137:  1, 138:  3, 139:  1, 140:  1, 141:  1, 142:  1, 143:  1, 
 144:  1, 145:  1, 146:  1, 147:  1, 148:  1, 149:  3, 150:  1, 151:  1, 
 152:  3, 153:  1, 154:  1, 155:  1, 156:  1, 157:  1, 158:  1, 159:  1, 
 160:  1, 161:  1, 162:  1, 163:  1, 164:  1, 165:  1, 166:  1, 167:  1, 
 168:  1, 169:  3, 170:  1, 171:  1, 172:  1, 173:  1, 174:  1, 175:  1, 
 176:  1, 177:  1, 178:  1, 179:  1, 180:  1, 181:  1, 182:  1, 183:  1, 
 184:  1, 185:  1, 186:  1, 187:  1, 188:  1, 189:  1, 190:  1, 191:  1, 
 192:  1, 193:  1, 194:  1, 195:  5, 196:  1, 197:  1, 198:  1, 199:  1, 
 200:  3, 201:  1, 202:  1, 203:  3, 204:  1, 205:  1, 206:  5, 207:  1, 
 208:  1, 209:  1, 210:  1, 211:  1, 212:  1, 213:  1, 214:  1, 215:  1, 
 216:  1, 217:  1, 218:  1, 219:  1, 220:  1, 221:  1, 222:  1, 223:  1, 
 224:  1, 225:  1, 226:  1, 227:  1, 228:  1, 229:  1, 230:  1, 231:  1, 
 232:  1, 233:  1, 234:  1, 235:  1, 236:  1, 237:  1, 238:  1, 239:  1, 
 240:  5, 241:  1, 242:  1, 243:  1, 244:  1, 245:  1, 246:  1, 247:  1, 
 248:  1, 249:  1, 250:  1, 251:  1, 252:  1, 253:  1, 254:  1, 255:  1, 
 256:  1, 257:  3, 258:  1, 259:  1, 260:  1, 261:  1, 262:  1, 263:  1, 
 264:  7, 265:  1, 266:  1, 267:  1, 268:  7, 269:  1, 270:  1, 271:  1, 
 272:  1, 273:  1, 274:  1, 275:  1, 276:  1, 277:  1, 278:  1, 279:  1, 
 280:  1, 281:  1, 282:  1, 283:  1, 284:  1, 285:  1, 286:  1, 287:  1, 
 288:  1, 289:  1, 290:  1, 291:  1, 292:  1, 293:  1, 294:  1, 295:  1, 
 296:  1, 297:  1, 298:  1, 299:  1, 300:  1, 301:  1, 302:  1, 303:  1, 
 304:  1, 305:  1, 306:  1, 307:  3, 308:  1, 309:  1, 310:  1, 311:  1, 
 312:  1, 313:  1, 314:  1, 315:  1, 316:  1, 317:  1
}

assignment (after partition): {
  0:  2,  1:  2,  2:  2,  3:  2,  4:  2,  5:  2,  6:  2,  7:  2, 
  8:  2,  9:  2, 10:  2, 11:  2, 12:  2, 13:  2, 14:  2, 15:  2, 
 16:  2, 17:  2, 18:  2, 19:  2, 20:  2, 21:  2, 22:  2, 23:  2, 
 24:  2, 25:  2, 26:  2, 27:  2, 28:  2, 29:  2, 30:  2, 31:  2, 
 32:  2, 33:  2, 34:  2, 35:  2, 36:  2, 37:  2, 38:  2, 39:  2, 
 40:  2, 41:  2, 42:  2, 43:  2, 44:  2, 45:  2, 46:  2, 47:  2, 
 48:  2, 49:  2, 50:  2, 51:  2, 52:  2, 53:  2, 54:  2, 55:  2, 
 56:  2, 57:  2, 58:  2, 59:  2, 60:  2, 61:  2, 62:  2, 63:  2, 
 64:  2, 65:  2, 66:  2, 67:  2, 68:  2, 69:  2, 70:  2, 71:  2, 
 72:  2, 73:  2, 74:  2, 75:  2, 76:  2, 77:  2, 78:  2, 79:  2, 
 80:  2, 81:  2, 82:  2, 83:  2, 84:  2, 85:  2, 86:  2, 87:  2, 
 88:  2, 89:  2, 90:  2, 91:  2, 92:  2, 93:  2, 94:  2, 95:  2, 
 96:  2, 97:  2, 98:  2, 99:  2, 100:  2, 101:  2, 102:  2, 103:  2, 
 104:  2, 105:  2, 106:  2, 107:  2, 108:  2, 109:  2, 110:  2, 111:  2, 
 112:  2, 113:  2, 114:  2, 115:  2, 116:  2, 117:  2, 118:  2, 119:  2, 
 120:  2, 121:  2, 122:  2, 123:  2, 124:  2, 125:  2, 126:  2, 127:  2, 
 128:  2, 129:  2, 130:  2, 131:  2, 132:  2, 133:  2, 134:  2, 135:  2, 
 136:  2, 137:  2, 138:  2, 139:  2, 140:  2, 141:  2, 142:  2, 143:  2, 
 144:  2, 145:  2, 146:  2, 147:  2, 148:  2, 149:  2, 150:  2, 151:  2, 
 152:  2, 153:  2, 154:  2, 155:  2, 156:  2, 157:  2, 158:  2, 159:  2, 
 160:  2, 161:  2, 162:  2, 163:  2, 164:  2, 165:  2, 166:  2, 167:  2, 
 168:  2, 169:  2, 170:  2, 171:  2, 172:  2, 173:  2, 174:  2, 175:  2, 
 176:  2, 177:  2, 178:  2, 179:  2, 180:  2, 181:  2, 182:  2, 183:  2, 
 184:  2, 185:  2, 186:  2, 187:  2, 188:  2, 189:  2, 190:  2, 191:  2, 
 192:  2, 193:  2, 194:  2, 195:  2, 196:  2, 197:  2, 198:  2, 199:  2, 
 200:  2, 201:  2, 202:  2, 203:  2, 204:  2, 205:  2, 206:  2, 207:  2, 
 208:  2, 209:  2, 210:  2, 211:  2, 212:  2, 213:  2, 214:  2, 215:  2, 
 216:  2, 217:  2, 218:  2, 219:  2, 220:  2, 221:  2, 222:  2, 223:  2, 
 224:  2, 225:  2, 226:  2, 227:  2, 228:  2, 229:  2, 230:  2, 231:  2, 
 232:  2, 233:  2, 234:  2, 235:  2, 236:  2, 237:  2, 238:  2, 239:  2, 
 240:  2, 241:  2, 242:  2, 243:  2, 244:  2, 245:  2, 246:  2, 247:  2, 
 248:  2, 249:  2, 250:  2, 251:  2, 252:  2, 253:  2, 254:  2, 255:  2, 
 256:  2, 257:  2, 258:  2, 259:  2, 260:  2, 261:  2, 262:  2, 263:  2, 
 264:  2, 265:  2, 266:  2, 267:  2, 268:  2, 269:  2, 270:  2, 271:  2, 
 272:  2, 273:  2, 274:  2, 275:  2, 276:  2, 277:  2, 278:  2, 279:  2, 
 280:  2, 281:  2, 282:  2, 283:  2, 284:  2, 285:  2, 286:  2, 287:  2, 
 288:  2, 289:  2, 290:  2, 291:  2, 292:  2, 293:  2, 294:  2, 295:  2, 
 296:  2, 297:  2, 298:  2, 299:  2, 300:  2, 301:  2, 302:  2, 303:  2, 
 304:  2, 305:  2, 306:  2, 307:  2, 308:  2, 309:  2, 310:  2, 311:  2, 
 312:  2, 313:  2, 314:  2, 315:  2, 316:  2, 317:  2
}

is_pm_disabled (after partitioning): {
  0:  1,  1:  1,  2:  0,  3:  1
}

host_usage (updated): {
  0:  0,  1:  0,  2: 410,  3:  0,  4:  0,  5:  0,  6:  0,  7:  0, 
  8:  0,  9:  0, 10:  0, 11:  0, 12:  0, 13:  0, 14:  0, 15:  0, 
 16:  0, 17:  0, 18:  0, 19:  0
}

PM 0 is under-utilized. Its CPU usage is 0 + 68 = 68.
  |- Accum. usage=68.00, New usage=100.00, Next usage=87.

PM 1 is under-utilized. Its CPU usage is 0 + 68 = 68.
  |- Accum. usage=68.00, New usage=100.00, Next usage=87.

PM 2 is over-utilized. Its CPU usage is 410 + 68 = 478.
  |- Accum. usage=68.00, New usage=10.00, Next usage=33.

PM 3 is under-utilized. Its CPU usage is 0 + 14 = 14.
  |- Accum. usage=14.00, New usage=100.00, Next usage=65.

usage (updated): {
  0: 87,  1: 87,  2: 33,  3: 65
}

set_capa (switch capacity): {
  0: 33725,  1: 58307,  2: 25143,  3: 102155
}

Siyuan: vwgt_sum: 23080.000000, nsets_tot: 4
Siyuan: Total capacity: 219330.000000
 Set goals:
	goal[0]: 0.000000
	goal[1]: 0.000000
	goal[2]: 0.000000
	goal[3]: 23080.000000

Graph file: `1221.r0.cch.abr.graph', # vertices = 318, # edges = 758
Global method: Multilevel-KL
Number of vertices to coarsen down to: 192
Eigen tolerance: 0.001
Local method: Kernighan-Lin
Partitioning target: 2-dimensional hypercube
Partitioning mode: Quadrisection
Random seed: 7654321
Active Parameters:
  CHECK_INPUT = True
  LANCZOS_TYPE:  Selective orthogonalization
  EIGEN_TOLERANCE = 0.001
  SRESTOL = -1 ... autoset to square of eigen tolerance
  LANCZOS_MAXITNS = -1 ... autoset to twice # vertices
  LANCZOS_SO_PRECISION = 2 ... double precision
  LANCZOS_SO_INTERVAL = 10
  LANCZOS_CONVERGENCE_MODE = 0 ... residual tolerance
  BISECTION_SAFETY = 10
  LANCZOS_TIME = 0 ... no detailed timing
  WARNING_EVECS = 2
  MAPPING_TYPE = 1 ... min-cost assignment
  MAKE_CONNECTED = True
  PERTURB = True
    NPERTURB = 2
    PERTURB_MAX = 0.003
  COARSEN_RATIO_MIN = 0.7
  COARSE_NLEVEL_KL = 2
  MATCH_TYPE = 1
  HEAVY_MATCH = False
  COARSE_KL_BOTTOM = True
  COARSEN_VWGTS = True
  COARSEN_EWGTS = True
  KL_ONLY_BNDY = True
  KL_RANDOM = True
  KL_METRIC = Hops
  KL_NTRIES_BAD = 1
  KL_BAD_MOVES = 20
  KL_UNDO_LIST = True
  KL_IMBALANCE = 0
  TERM_PROP = False
  OUTPUT_METRICS = 2
  MAKE_VWGTS = False
  REFINE_MAP = False
  REFINE_PARTITION = 0
  INTERNAL_VERTICES = False
  DEBUG_PARAMS = 2

WARNING: Coarsening not making enough progress, nvtxs = 318, cnvtxs = 240.
         Recursive coarsening being stopped prematurely.

After level 1  (nsets = 4):

                            Total      Max/Set      Min/Set
                            -----      -------      -------
Set Size:                   23080        22500            0
Edge Cuts:                    100          100            0
Hypercube Hops:               160          160            0
Boundary Vertices:              6            3            0
Boundary Vertex Hops:          10            6            0
Adjacent Sets:                  4            2            0
Internal Vertices:          22310        22050            0

Size of all sets:
0 300 280 22500 


Total time: 0.012 sec.
  partitioning 0.004
  other 0.008

KL time: 0.004 sec.
  nway refinement 0.004
    bucket sorting 0.004
~~~~~~~~~~~~~~partitioning finished~~~~~~~~~~~~~~~~~~
host_percent (after partition): {
  0:  1,  1:  1,  2:  1,  3:  1,  4:  1,  5:  3,  6:  1,  7:  1, 
  8:  3,  9:  3, 10:  5, 11:  3, 12:  5, 13:  1, 14:  1, 15:  1, 
 16:  1, 17:  1, 18:  1, 19:  3, 20:  1, 21:  1, 22:  1, 23:  1, 
 24:  1, 25:  1, 26:  3, 27:  5, 28:  1, 29:  3, 30:  1, 31:  1, 
 32:  1, 33:  1, 34:  1, 35:  1, 36:  1, 37:  1, 38:  1, 39:  1, 
 40:  1, 41:  1, 42:  7, 43:  1, 44:  1, 45:  1, 46:  1, 47:  3, 
 48:  1, 49:  1, 50:  1, 51:  1, 52:  1, 53:  3, 54:  3, 55:  1, 
 56:  1, 57:  1, 58:  7, 59:  1, 60:  1, 61:  1, 62:  1, 63:  1, 
 64:  1, 65:  1, 66:  1, 67:  1, 68:  1, 69:  1, 70:  1, 71:  1, 
 72:  1, 73:  1, 74:  1, 75:  1, 76:  1, 77:  1, 78:  1, 79:  1, 
 80:  1, 81:  1, 82:  1, 83:  1, 84:  1, 85:  1, 86:  1, 87:  1, 
 88:  1, 89:  1, 90:  1, 91:  1, 92:  5, 93:  1, 94:  1, 95:  1, 
 96:  1, 97:  1, 98:  3, 99:  1, 100:  1, 101:  1, 102:  1, 103:  1, 
 104:  1, 105:  1, 106:  1, 107:  1, 108:  1, 109:  1, 110:  1, 111:  1, 
 112:  1, 113:  1, 114:  1, 115:  1, 116:  1, 117:  1, 118:  1, 119:  1, 
 120:  1, 121:  1, 122:  1, 123:  1, 124:  1, 125:  1, 126:  1, 127:  1, 
 128:  1, 129:  1, 130:  1, 131:  1, 132:  1, 133:  1, 134:  1, 135:  3, 
 136:  1, 137:  1, 138:  3, 139:  1, 140:  1, 141:  1, 142:  1, 143:  1, 
 144:  1, 145:  1, 146:  1, 147:  1, 148:  1, 149:  3, 150:  1, 151:  1, 
 152:  3, 153:  1, 154:  1, 155:  1, 156:  1, 157:  1, 158:  1, 159:  1, 
 160:  1, 161:  1, 162:  1, 163:  1, 164:  1, 165:  1, 166:  1, 167:  1, 
 168:  1, 169:  3, 170:  1, 171:  1, 172:  1, 173:  1, 174:  1, 175:  1, 
 176:  1, 177:  1, 178:  1, 179:  1, 180:  1, 181:  1, 182:  1, 183:  1, 
 184:  1, 185:  1, 186:  1, 187:  1, 188:  1, 189:  1, 190:  1, 191:  1, 
 192:  1, 193:  1, 194:  1, 195:  5, 196:  1, 197:  1, 198:  1, 199:  1, 
 200:  3, 201:  1, 202:  1, 203:  3, 204:  1, 205:  1, 206:  5, 207:  1, 
 208:  1, 209:  1, 210:  1, 211:  1, 212:  1, 213:  1, 214:  1, 215:  1, 
 216:  1, 217:  1, 218:  1, 219:  1, 220:  1, 221:  1, 222:  1, 223:  1, 
 224:  1, 225:  1, 226:  1, 227:  1, 228:  1, 229:  1, 230:  1, 231:  1, 
 232:  1, 233:  1, 234:  1, 235:  1, 236:  1, 237:  1, 238:  1, 239:  1, 
 240:  5, 241:  1, 242:  1, 243:  1, 244:  1, 245:  1, 246:  1, 247:  1, 
 248:  1, 249:  1, 250:  1, 251:  1, 252:  1, 253:  1, 254:  1, 255:  1, 
 256:  1, 257:  3, 258:  1, 259:  1, 260:  1, 261:  1, 262:  1, 263:  1, 
 264:  7, 265:  1, 266:  1, 267:  1, 268:  7, 269:  1, 270:  1, 271:  1, 
 272:  1, 273:  1, 274:  1, 275:  1, 276:  1, 277:  1, 278:  1, 279:  1, 
 280:  1, 281:  1, 282:  1, 283:  1, 284:  1, 285:  1, 286:  1, 287:  1, 
 288:  1, 289:  1, 290:  1, 291:  1, 292:  1, 293:  1, 294:  1, 295:  1, 
 296:  1, 297:  1, 298:  1, 299:  1, 300:  1, 301:  1, 302:  1, 303:  1, 
 304:  1, 305:  1, 306:  1, 307:  3, 308:  1, 309:  1, 310:  1, 311:  1, 
 312:  1, 313:  1, 314:  1, 315:  1, 316:  1, 317:  1
}

assignment (after partition): {
  0:  3,  1:  3,  2:  3,  3:  3,  4:  3,  5:  3,  6:  3,  7:  3, 
  8:  3,  9:  3, 10:  3, 11:  3, 12:  3, 13:  3, 14:  3, 15:  3, 
 16:  3, 17:  3, 18:  3, 19:  3, 20:  3, 21:  3, 22:  3, 23:  3, 
 24:  3, 25:  3, 26:  3, 27:  3, 28:  3, 29:  3, 30:  3, 31:  3, 
 32:  3, 33:  3, 34:  3, 35:  3, 36:  3, 37:  3, 38:  3, 39:  3, 
 40:  3, 41:  3, 42:  3, 43:  3, 44:  3, 45:  3, 46:  3, 47:  3, 
 48:  3, 49:  3, 50:  3, 51:  3, 52:  3, 53:  3, 54:  3, 55:  3, 
 56:  3, 57:  3, 58:  3, 59:  3, 60:  3, 61:  3, 62:  3, 63:  3, 
 64:  3, 65:  3, 66:  3, 67:  3, 68:  3, 69:  3, 70:  3, 71:  3, 
 72:  3, 73:  3, 74:  3, 75:  3, 76:  3, 77:  3, 78:  3, 79:  3, 
 80:  3, 81:  3, 82:  3, 83:  3, 84:  3, 85:  3, 86:  3, 87:  3, 
 88:  3, 89:  3, 90:  3, 91:  3, 92:  3, 93:  3, 94:  2, 95:  3, 
 96:  3, 97:  3, 98:  3, 99:  3, 100:  1, 101:  1, 102:  1, 103:  3, 
 104:  3, 105:  3, 106:  3, 107:  3, 108:  3, 109:  3, 110:  3, 111:  3, 
 112:  3, 113:  3, 114:  3, 115:  3, 116:  3, 117:  3, 118:  3, 119:  3, 
 120:  3, 121:  3, 122:  3, 123:  3, 124:  3, 125:  3, 126:  3, 127:  3, 
 128:  3, 129:  3, 130:  3, 131:  3, 132:  3, 133:  3, 134:  3, 135:  3, 
 136:  3, 137:  3, 138:  3, 139:  3, 140:  3, 141:  1, 142:  3, 143:  3, 
 144:  3, 145:  3, 146:  1, 147:  1, 148:  3, 149:  3, 150:  3, 151:  3, 
 152:  3, 153:  3, 154:  3, 155:  3, 156:  3, 157:  3, 158:  3, 159:  3, 
 160:  3, 161:  3, 162:  3, 163:  3, 164:  3, 165:  3, 166:  3, 167:  3, 
 168:  3, 169:  3, 170:  3, 171:  3, 172:  3, 173:  3, 174:  3, 175:  3, 
 176:  3, 177:  3, 178:  3, 179:  3, 180:  3, 181:  3, 182:  3, 183:  3, 
 184:  3, 185:  3, 186:  3, 187:  3, 188:  3, 189:  3, 190:  3, 191:  3, 
 192:  3, 193:  3, 194:  3, 195:  3, 196:  3, 197:  3, 198:  3, 199:  3, 
 200:  3, 201:  3, 202:  3, 203:  3, 204:  3, 205:  2, 206:  3, 207:  3, 
 208:  3, 209:  3, 210:  3, 211:  3, 212:  3, 213:  3, 214:  2, 215:  1, 
 216:  2, 217:  2, 218:  1, 219:  1, 220:  3, 221:  3, 222:  3, 223:  3, 
 224:  3, 225:  3, 226:  3, 227:  3, 228:  3, 229:  3, 230:  3, 231:  3, 
 232:  3, 233:  3, 234:  3, 235:  3, 236:  3, 237:  3, 238:  3, 239:  3, 
 240:  3, 241:  3, 242:  3, 243:  3, 244:  3, 245:  3, 246:  3, 247:  3, 
 248:  3, 249:  3, 250:  3, 251:  3, 252:  3, 253:  3, 254:  3, 255:  3, 
 256:  3, 257:  3, 258:  3, 259:  3, 260:  3, 261:  3, 262:  3, 263:  3, 
 264:  3, 265:  3, 266:  3, 267:  3, 268:  3, 269:  3, 270:  3, 271:  3, 
 272:  3, 273:  3, 274:  3, 275:  3, 276:  3, 277:  3, 278:  3, 279:  3, 
 280:  3, 281:  3, 282:  3, 283:  3, 284:  3, 285:  3, 286:  3, 287:  3, 
 288:  3, 289:  3, 290:  3, 291:  3, 292:  3, 293:  3, 294:  3, 295:  2, 
 296:  3, 297:  3, 298:  2, 299:  3, 300:  3, 301:  3, 302:  3, 303:  3, 
 304:  3, 305:  3, 306:  3, 307:  3, 308:  3, 309:  3, 310:  3, 311:  3, 
 312:  3, 313:  3, 314:  3, 315:  3, 316:  3, 317:  3
}

is_pm_disabled (after partitioning): {
  0:  1,  1:  1,  2:  1,  3:  0
}

Warning: host 94 is assigned to disabled PM #2. Move it to 3.
Warning: host 100 is assigned to disabled PM #1. Move it to 3.
Warning: host 101 is assigned to disabled PM #1. Move it to 3.
Warning: host 102 is assigned to disabled PM #1. Move it to 3.
Warning: host 141 is assigned to disabled PM #1. Move it to 3.
Warning: host 146 is assigned to disabled PM #1. Move it to 3.
Warning: host 147 is assigned to disabled PM #1. Move it to 3.
Warning: host 205 is assigned to disabled PM #2. Move it to 3.
Warning: host 214 is assigned to disabled PM #2. Move it to 3.
Warning: host 215 is assigned to disabled PM #1. Move it to 3.
Warning: host 216 is assigned to disabled PM #2. Move it to 3.
Warning: host 217 is assigned to disabled PM #2. Move it to 3.
Warning: host 218 is assigned to disabled PM #1. Move it to 3.
Warning: host 219 is assigned to disabled PM #1. Move it to 3.
Warning: host 295 is assigned to disabled PM #2. Move it to 3.
Warning: host 298 is assigned to disabled PM #2. Move it to 3.
host_usage (updated): {
  0:  0,  1:  0,  2:  0,  3: 410,  4:  0,  5:  0,  6:  0,  7:  0, 
  8:  0,  9:  0, 10:  0, 11:  0, 12:  0, 13:  0, 14:  0, 15:  0, 
 16:  0, 17:  0, 18:  0, 19:  0
}

PM 0 is under-utilized. Its CPU usage is 0 + 87 = 87.
  |- Accum. usage=87.00, New usage=100.00, Next usage=94.

PM 1 is under-utilized. Its CPU usage is 0 + 87 = 87.
  |- Accum. usage=87.00, New usage=100.00, Next usage=94.

PM 2 is under-utilized. Its CPU usage is 0 + 33 = 33.
  |- Accum. usage=33.00, New usage=100.00, Next usage=73.

PM 3 is over-utilized. Its CPU usage is 410 + 65 = 475.
  |- Accum. usage=65.00, New usage=10.00, Next usage=32.

usage (updated): {
  0: 94,  1: 94,  2: 73,  3: 32
}

Iteration 2 gives same assignment as 0. Stop.

Run Another Problem? 
